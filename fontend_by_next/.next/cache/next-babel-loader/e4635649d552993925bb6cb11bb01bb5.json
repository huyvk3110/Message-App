{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { default as axios } from \"axios\";\nconst HOST = 'http://192.168.1.3:3001';\nexport default class API {\n  static login(email, password) {\n    return new Promise((res, rej) => {\n      axios.post(`${HOST}/api/auth/login`, {\n        username: email,\n        password\n      }, {\n        headers: API.headers\n      }).then(response => {\n        const {\n          status,\n          authenticate,\n          data\n        } = response.data;\n        console.log(response);\n\n        if (status === 'success') {\n          localStorage.setItem('token', authenticate);\n          API.headers = Object.assign({}, API.headers, {\n            'Authorization': `Bearer ${authenticate}`\n          });\n          res(data);\n        }\n      }).catch(error => console.log('error', error));\n    });\n  }\n\n  static loginToken() {\n    return new Promise((res, rej) => {\n      const token = localStorage.getItem('token');\n      if (!token) return rej();\n      API.headers = Object.assign({}, API.headers, {\n        'Authorization': `Bearer ${token}`\n      });\n      axios.post(`${HOST}/api/auth/login-jwt`, {}, {\n        headers: API.headers\n      }).then(response => {\n        const {\n          status,\n          authenticate,\n          data\n        } = response.data;\n\n        if (status === 'success') {\n          res(data);\n        }\n      }).catch(error => rej(error));\n    });\n  }\n\n  static register(email, password) {\n    return axios.post(`${HOST}/api/account`, {\n      email,\n      password\n    }, {\n      headers: API.headers\n    });\n  }\n\n  static logout() {\n    return axios.post(`${HOST}/api/auth/logout`);\n  }\n\n  static getAccount() {\n    return axios.get(`${HOST}/api/account`, {\n      headers: API.headers\n    });\n  }\n\n}\n\n_defineProperty(API, \"headers\", {\n  'Content-Type': 'application/json'\n});","map":null,"metadata":{},"sourceType":"module"}