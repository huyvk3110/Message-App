{"ast":null,"code":"import { UPDATE_USER_DATA, SET_LOGGER } from \"../define/define.redux.key\";\nlet appStore = {\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\"\n  },\n  logged: false\n};\nexport default function appReducer(state = appStore, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case UPDATE_USER_DATA:\n      return Object.assign({}, state, {\n        user: payload\n      });\n\n    case SET_LOGGER:\n      return Object.assign({}, state, {\n        logged: payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/vankhachuy/Work/Project/message_v2/reducer/reducer.app.ts"],"names":["UPDATE_USER_DATA","SET_LOGGER","appStore","user","id","name","email","logged","appReducer","state","action","type","payload","Object","assign"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,UAA3B,QAA6C,4BAA7C;AAGA,IAAIC,QAAmB,GAAG;AACtBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAE,EADF;AAEFC,IAAAA,IAAI,EAAE,EAFJ;AAGFC,IAAAA,KAAK,EAAE;AAHL,GADgB;AAMtBC,EAAAA,MAAM,EAAE;AANc,CAA1B;AASA,eAAe,SAASC,UAAT,CAAoBC,KAAK,GAAGP,QAA5B,EAAsCQ,MAAtC,EAA8E;AACzF,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACI,SAAKX,gBAAL;AACI,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEN,QAAAA,IAAI,EAAES;AAAR,OAAzB,CAAP;;AACJ,SAAKX,UAAL;AACI,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEF,QAAAA,MAAM,EAAEK;AAAV,OAAzB,CAAP;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH","sourcesContent":["import { UPDATE_USER_DATA, SET_LOGGER } from \"../define/define.redux.key\";\nimport { IStoreApp } from \"../define/define.interface\";\n\nlet appStore: IStoreApp = {\n    user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n    },\n    logged: false\n}\n\nexport default function appReducer(state = appStore, action: { type: string, payload: any }) {\n    const { type, payload } = action;\n    switch (type) {\n        case UPDATE_USER_DATA:\n            return Object.assign({}, state, { user: payload })\n        case SET_LOGGER:\n            return Object.assign({}, state, { logged: payload })\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}