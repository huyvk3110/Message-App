{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Alert as AlertBootstrap } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { hideAlert } from \"../action/action.alert\";\nvar hideAction = undefined;\n\nvar Alert =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Alert, _Component);\n\n  function Alert(props) {\n    var _this;\n\n    _classCallCheck(this, Alert);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Alert).call(this, props));\n    _this.state = {\n      hideAction: undefined\n    };\n    return _this;\n  }\n\n  _createClass(Alert, [{\n    key: \"setShow\",\n    value: function setShow(show) {\n      this.props.hideAlert();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$alert = this.props.alert,\n          innerContent = _this$props$alert.innerContent,\n          variant = _this$props$alert.variant,\n          dismissible = _this$props$alert.dismissible,\n          show = _this$props$alert.show;\n\n      if (this.props.alert.show) {\n        if (hideAction) clearTimeout(hideAction);\n        hideAction = setTimeout(function () {\n          _this2.props.hideAlert();\n        }, 3000);\n      }\n\n      return __jsx(\"div\", {\n        className: \"alert-custom\"\n      }, __jsx(AlertBootstrap, {\n        variant: variant || 'primary',\n        show: show,\n        onClose: function onClose() {\n          return _this2.setShow(false);\n        },\n        dismissible: dismissible\n      }, innerContent));\n    }\n  }]);\n\n  return Alert;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    alert: state.alert\n  };\n};\n\nvar mapDispatchToProps = {\n  hideAlert: hideAlert\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Alert);","map":null,"metadata":{},"sourceType":"module"}