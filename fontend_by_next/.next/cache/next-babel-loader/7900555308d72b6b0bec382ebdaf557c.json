{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Alert as AlertBootstrap } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { hideAlert } from \"../action/action.alert\";\nlet hideAction = undefined;\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideAction: undefined\n    };\n  }\n\n  setShow(show) {\n    this.props.hideAlert();\n  }\n\n  render() {\n    const {\n      innerContent,\n      variant,\n      dismissible,\n      show\n    } = this.props.alert;\n\n    if (this.props.alert.show) {\n      if (hideAction) clearTimeout(hideAction);\n      hideAction = setTimeout(() => {\n        this.props.hideAlert();\n      }, 3000);\n    }\n\n    return __jsx(\"div\", {\n      className: \"alert-custom\"\n    }, __jsx(AlertBootstrap, {\n      variant: variant || 'primary',\n      show: show,\n      onClose: () => this.setShow(false),\n      dismissible: dismissible\n    }, innerContent));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  alert: state.alert\n});\n\nconst mapDispatchToProps = {\n  hideAlert\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Alert);","map":null,"metadata":{},"sourceType":"module"}