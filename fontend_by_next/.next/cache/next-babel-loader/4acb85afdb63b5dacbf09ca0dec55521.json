{"ast":null,"code":"var _jsxFileName = \"/Users/vankhachuy/Work/Project/message_v2/components/components.alert.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Alert as AlertBootstrap } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { hideAlert } from \"../action/action.alert\";\nlet hideAction = undefined;\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideAction: undefined\n    };\n  }\n\n  setShow(show) {\n    this.props.hideAlert();\n  }\n\n  render() {\n    const {\n      innerContent,\n      variant,\n      dismissible,\n      show\n    } = this.props.alert;\n\n    if (this.props.alert.show) {\n      if (hideAction) clearTimeout(hideAction);\n      hideAction = setTimeout(() => {\n        this.props.hideAlert();\n      }, 3000);\n    }\n\n    return __jsx(\"div\", {\n      className: \"alert-custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(AlertBootstrap, {\n      variant: variant || 'primary',\n      show: show,\n      onClose: () => this.setShow(false),\n      dismissible: dismissible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, innerContent));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  alert: state.alert\n});\n\nconst mapDispatchToProps = {\n  hideAlert\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Alert);","map":{"version":3,"sources":["/Users/vankhachuy/Work/Project/message_v2/components/components.alert.tsx"],"names":["React","Component","Alert","AlertBootstrap","connect","hideAlert","hideAction","undefined","constructor","props","state","setShow","show","render","innerContent","variant","dismissible","alert","clearTimeout","setTimeout","mapStateToProps","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAK,IAAIC,cAAlB,QAA4D,iBAA5D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAYA,IAAIC,UAAe,GAAGC,SAAtB;;AAEA,MAAML,KAAN,SAAoBD,SAApB,CAA8C;AAC1CO,EAAAA,WAAW,CAACC,KAAD,EAAgB;AACvB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTJ,MAAAA,UAAU,EAAEC;AADH,KAAb;AAGH;;AAEDI,EAAAA,OAAO,CAACC,IAAD,EAAgB;AACnB,SAAKH,KAAL,CAAWJ,SAAX;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA,OAAhB;AAAyBC,MAAAA,WAAzB;AAAsCJ,MAAAA;AAAtC,QAA+C,KAAKH,KAAL,CAAWQ,KAAhE;;AAEA,QAAI,KAAKR,KAAL,CAAWQ,KAAX,CAAiBL,IAArB,EAA2B;AACvB,UAAIN,UAAJ,EAAgBY,YAAY,CAACZ,UAAD,CAAZ;AAChBA,MAAAA,UAAU,GAAGa,UAAU,CAAC,MAAM;AAC1B,aAAKV,KAAL,CAAWJ,SAAX;AACH,OAFsB,EAEpB,IAFoB,CAAvB;AAGH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,cAAD;AAAgB,MAAA,OAAO,EAAEU,OAAO,IAAI,SAApC;AAA+C,MAAA,IAAI,EAAEH,IAArD;AAA2D,MAAA,OAAO,EAAE,MAAM,KAAKD,OAAL,CAAa,KAAb,CAA1E;AAA+F,MAAA,WAAW,EAAEK,WAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,YADL,CADJ,CADJ;AAOH;;AA9ByC;;AAiC9C,MAAMM,eAAe,GAAIV,KAAD,KAAiB;AACrCO,EAAAA,KAAK,EAAEP,KAAK,CAACO;AADwB,CAAjB,CAAxB;;AAIA,MAAMI,kBAAkB,GAAG;AACvBhB,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,KAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Alert as AlertBootstrap, AlertProps, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { hideAlert } from \"../action/action.alert\";\nimport { IStoreAlert } from \"../define/define.interface\";\n\nexport interface IProps {\n    alert: IStoreAlert\n    hideAlert: Function,\n}\n\ninterface IState {\n    hideAction: any,\n}\n\nlet hideAction: any = undefined;\n\nclass Alert extends Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            hideAction: undefined,\n        }\n    }\n\n    setShow(show: boolean) {\n        this.props.hideAlert();\n    }\n\n    render() {\n        const { innerContent, variant, dismissible, show } = this.props.alert;\n\n        if (this.props.alert.show) {\n            if (hideAction) clearTimeout(hideAction);\n            hideAction = setTimeout(() => {\n                this.props.hideAlert();\n            }, 3000)\n        }\n\n        return (\n            <div className=\"alert-custom\">\n                <AlertBootstrap variant={variant || 'primary'} show={show} onClose={() => this.setShow(false)} dismissible={dismissible}>\n                    {innerContent}\n                </AlertBootstrap>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    alert: state.alert\n})\n\nconst mapDispatchToProps = {\n    hideAlert\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Alert);\n"]},"metadata":{},"sourceType":"module"}