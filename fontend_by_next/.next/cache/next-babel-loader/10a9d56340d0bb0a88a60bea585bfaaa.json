{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { UPDATE_USER_DATA, SET_LOGGER } from \"../define/define.redux.key\";\nvar appStore = {\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\"\n  },\n  logged: false\n};\nexport default function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : appStore;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case UPDATE_USER_DATA:\n      return _Object$assign({}, state, {\n        user: payload\n      });\n\n    case SET_LOGGER:\n      return _Object$assign({}, state, {\n        logged: payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/vankhachuy/Work/Project/message_v2/reducer/reducer.app.ts"],"names":["UPDATE_USER_DATA","SET_LOGGER","appStore","user","id","name","email","logged","appReducer","state","action","type","payload"],"mappings":";AAAA,SAASA,gBAAT,EAA2BC,UAA3B,QAA6C,4BAA7C;AAGA,IAAIC,QAAmB,GAAG;AACtBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAE,EADF;AAEFC,IAAAA,IAAI,EAAE,EAFJ;AAGFC,IAAAA,KAAK,EAAE;AAHL,GADgB;AAMtBC,EAAAA,MAAM,EAAE;AANc,CAA1B;AASA,eAAe,SAASC,UAAT,GAA8E;AAAA,MAA1DC,KAA0D,uEAAlDP,QAAkD;AAAA,MAAxCQ,MAAwC;AAAA,MACjFC,IADiF,GAC/DD,MAD+D,CACjFC,IADiF;AAAA,MAC3EC,OAD2E,GAC/DF,MAD+D,CAC3EE,OAD2E;;AAEzF,UAAQD,IAAR;AACI,SAAKX,gBAAL;AACI,aAAO,eAAc,EAAd,EAAkBS,KAAlB,EAAyB;AAAEN,QAAAA,IAAI,EAAES;AAAR,OAAzB,CAAP;;AACJ,SAAKX,UAAL;AACI,aAAO,eAAc,EAAd,EAAkBQ,KAAlB,EAAyB;AAAEF,QAAAA,MAAM,EAAEK;AAAV,OAAzB,CAAP;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH","sourcesContent":["import { UPDATE_USER_DATA, SET_LOGGER } from \"../define/define.redux.key\";\nimport { IStoreApp } from \"../define/define.interface\";\n\nlet appStore: IStoreApp = {\n    user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n    },\n    logged: false\n}\n\nexport default function appReducer(state = appStore, action: { type: string, payload: any }) {\n    const { type, payload } = action;\n    switch (type) {\n        case UPDATE_USER_DATA:\n            return Object.assign({}, state, { user: payload })\n        case SET_LOGGER:\n            return Object.assign({}, state, { logged: payload })\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}