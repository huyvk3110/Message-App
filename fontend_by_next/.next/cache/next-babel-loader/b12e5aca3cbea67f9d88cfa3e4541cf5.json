{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { default as axios } from \"axios\";\nvar HOST = 'http://192.168.1.3:3001';\n\nvar API =\n/*#__PURE__*/\nfunction () {\n  function API() {\n    _classCallCheck(this, API);\n  }\n\n  _createClass(API, null, [{\n    key: \"login\",\n    value: function login(email, password) {\n      return new _Promise(function (res, rej) {\n        axios.post(\"\".concat(HOST, \"/api/auth/login\"), {\n          username: email,\n          password: password\n        }, {\n          headers: API.headers\n        }).then(function (response) {\n          var _response$data = response.data,\n              status = _response$data.status,\n              authenticate = _response$data.authenticate,\n              data = _response$data.data;\n          console.log(response);\n\n          if (status === 'success') {\n            localStorage.setItem('token', authenticate);\n            API.headers = _Object$assign({}, API.headers, {\n              'Authorization': \"Bearer \".concat(authenticate)\n            });\n            res(data);\n          }\n        })[\"catch\"](function (error) {\n          return console.log('error', error);\n        });\n      });\n    }\n  }, {\n    key: \"loginToken\",\n    value: function loginToken() {\n      return new _Promise(function (res, rej) {\n        var token = localStorage.getItem('token');\n        if (!token) return rej();\n        API.headers = _Object$assign({}, API.headers, {\n          'Authorization': \"Bearer \".concat(token)\n        });\n        axios.post(\"\".concat(HOST, \"/api/auth/login-jwt\"), {}, {\n          headers: API.headers\n        }).then(function (response) {\n          var _response$data2 = response.data,\n              status = _response$data2.status,\n              authenticate = _response$data2.authenticate,\n              data = _response$data2.data;\n\n          if (status === 'success') {\n            res(data);\n          }\n        })[\"catch\"](function (error) {\n          return rej(error);\n        });\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register(email, password) {\n      return axios.post(\"\".concat(HOST, \"/api/account\"), {\n        email: email,\n        password: password\n      }, {\n        headers: API.headers\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      return axios.post(\"\".concat(HOST, \"/api/auth/logout\"));\n    }\n  }, {\n    key: \"getAccount\",\n    value: function getAccount() {\n      return axios.get(\"\".concat(HOST, \"/api/account\"), {\n        headers: API.headers\n      });\n    }\n  }]);\n\n  return API;\n}();\n\n_defineProperty(API, \"headers\", {\n  'Content-Type': 'application/json'\n});\n\nexport { API as default };","map":{"version":3,"sources":["/Users/vankhachuy/Work/Project/message_v2/api.ts"],"names":["default","axios","HOST","API","email","password","res","rej","post","username","headers","then","response","data","status","authenticate","console","log","localStorage","setItem","error","token","getItem","get"],"mappings":";;;;;AAAA,SAASA,OAAO,IAAIC,KAApB,QAAiC,OAAjC;AAEA,IAAMC,IAAI,GAAG,yBAAb;;IAEqBC,G;;;;;;;;;0BAKJC,K,EAAeC,Q,EAAgC;AACxD,aAAO,aAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BN,QAAAA,KAAK,CAACO,IAAN,WAAcN,IAAd,sBAAqC;AAAEO,UAAAA,QAAQ,EAAEL,KAAZ;AAAmBC,UAAAA,QAAQ,EAARA;AAAnB,SAArC,EAAoE;AAAEK,UAAAA,OAAO,EAAEP,GAAG,CAACO;AAAf,SAApE,EACKC,IADL,CACU,UAACC,QAAD,EAAc;AAAA,+BACuBA,QAAQ,CAACC,IADhC;AAAA,cACRC,MADQ,kBACRA,MADQ;AAAA,cACAC,YADA,kBACAA,YADA;AAAA,cACcF,IADd,kBACcA,IADd;AAEhBG,UAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,cAAIE,MAAM,KAAK,SAAf,EAA0B;AACtBI,YAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,YAA9B;AACAZ,YAAAA,GAAG,CAACO,OAAJ,GAAc,eAAc,EAAd,EAAkBP,GAAG,CAACO,OAAtB,EAA+B;AAAE,gDAA2BK,YAA3B;AAAF,aAA/B,CAAd;AACAT,YAAAA,GAAG,CAACO,IAAD,CAAH;AACH;AACJ,SATL,WAUW,UAAAO,KAAK;AAAA,iBAAIJ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAArB,CAAJ;AAAA,SAVhB;AAWH,OAZM,CAAP;AAaH;;;iCAEiC;AAC9B,aAAO,aAAY,UAACd,GAAD,EAAMC,GAAN,EAAc;AAC7B,YAAMc,KAAK,GAAGH,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAd;AACA,YAAI,CAACD,KAAL,EAAY,OAAOd,GAAG,EAAV;AACZJ,QAAAA,GAAG,CAACO,OAAJ,GAAc,eAAc,EAAd,EAAkBP,GAAG,CAACO,OAAtB,EAA+B;AAAE,4CAA2BW,KAA3B;AAAF,SAA/B,CAAd;AAEApB,QAAAA,KAAK,CAACO,IAAN,WAAcN,IAAd,0BAAyC,EAAzC,EAA6C;AAAEQ,UAAAA,OAAO,EAAEP,GAAG,CAACO;AAAf,SAA7C,EACKC,IADL,CACU,UAACC,QAAD,EAAc;AAAA,gCACuBA,QAAQ,CAACC,IADhC;AAAA,cACRC,MADQ,mBACRA,MADQ;AAAA,cACAC,YADA,mBACAA,YADA;AAAA,cACcF,IADd,mBACcA,IADd;;AAEhB,cAAIC,MAAM,KAAK,SAAf,EAA0B;AACtBR,YAAAA,GAAG,CAACO,IAAD,CAAH;AACH;AACJ,SANL,WAOW,UAAAO,KAAK;AAAA,iBAAIb,GAAG,CAACa,KAAD,CAAP;AAAA,SAPhB;AAQH,OAbM,CAAP;AAcH;;;6BAEehB,K,EAAeC,Q,EAAkB;AAC7C,aAAOJ,KAAK,CAACO,IAAN,WAAcN,IAAd,mBAAkC;AAAEE,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,QAAQ,EAARA;AAAT,OAAlC,EAAuD;AAAEK,QAAAA,OAAO,EAAEP,GAAG,CAACO;AAAf,OAAvD,CAAP;AACH;;;6BAEe;AACZ,aAAOT,KAAK,CAACO,IAAN,WAAcN,IAAd,sBAAP;AACH;;;iCAEmB;AAChB,aAAOD,KAAK,CAACsB,GAAN,WAAarB,IAAb,mBAAiC;AAAEQ,QAAAA,OAAO,EAAEP,GAAG,CAACO;AAAf,OAAjC,CAAP;AACH;;;;;;gBAhDgBP,G,aACA;AACb,kBAAgB;AADH,C;;SADAA,G","sourcesContent":["import { default as axios } from \"axios\";\n\nconst HOST = 'http://192.168.1.3:3001'\n\nexport default class API {\n    static headers = {\n        'Content-Type': 'application/json'\n    }\n\n    static login(email: string, password: string): Promise<any> {\n        return new Promise((res, rej) => {\n            axios.post(`${HOST}/api/auth/login`, { username: email, password }, { headers: API.headers })\n                .then((response) => {\n                    const { status, authenticate, data } = response.data;\n                    console.log(response)\n                    if (status === 'success') {\n                        localStorage.setItem('token', authenticate);\n                        API.headers = Object.assign({}, API.headers, { 'Authorization': `Bearer ${authenticate}` })\n                        res(data)\n                    }\n                })\n                .catch(error => console.log('error', error))\n        })\n    }\n\n    static loginToken(): Promise<any> {\n        return new Promise((res, rej) => {\n            const token = localStorage.getItem('token');\n            if (!token) return rej();\n            API.headers = Object.assign({}, API.headers, { 'Authorization': `Bearer ${token}` })\n\n            axios.post(`${HOST}/api/auth/login-jwt`, {}, { headers: API.headers })\n                .then((response) => {\n                    const { status, authenticate, data } = response.data;\n                    if (status === 'success') {\n                        res(data)\n                    }\n                })\n                .catch(error => rej(error))\n        })\n    }\n\n    static register(email: string, password: string) {\n        return axios.post(`${HOST}/api/account`, { email, password }, { headers: API.headers })\n    }\n\n    static logout() {\n        return axios.post(`${HOST}/api/auth/logout`)\n    }\n\n    static getAccount() {\n        return axios.get(`${HOST}/api/account`, { headers: API.headers })\n    }\n}"]},"metadata":{},"sourceType":"module"}