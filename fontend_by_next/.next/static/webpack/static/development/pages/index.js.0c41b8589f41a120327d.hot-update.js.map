{"version":3,"file":"static/webpack/static/development/pages/index.js.0c41b8589f41a120327d.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React, { Component, SyntheticEvent } from \"react\";\nimport Link from \"next/link\";\nimport API from \"../api\";\nimport { connect } from \"react-redux\";\nimport { showAlert } from \"../action/action.alert\";\nimport { updateUserData } from \"../action/action.app\";\nimport { IStoreApp } from \"../define/define.interface\";\n\nenum LOGIN_TYPE {\n    SIGNIN = 1,\n    SIGNUP = 2,\n}\n\ninterface IProps {\n    app: IStoreApp\n    showAlert: typeof showAlert\n    updateUserData: typeof updateUserData\n}\n\ninterface IStates {\n    loginType: LOGIN_TYPE,\n    email: string,\n    password: string,\n    passwordConfirm: string,\n}\n\nclass Login extends Component<IProps, IStates> {\n    constructor(props: IProps) {\n        super(props)\n\n        this.state = {\n            loginType: LOGIN_TYPE.SIGNIN,\n            email: '',\n            password: '',\n            passwordConfirm: '',\n        }\n\n        this.loginSuccessHandle = this.loginSuccessHandle.bind(this);\n        this.loginFailureHandle = this.loginFailureHandle.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n        this.onClickTabSignIn = this.onClickTabSignIn.bind(this);\n        this.onClickTabSignUp = this.onClickTabSignUp.bind(this);\n        this.onClickSubmit = this.onClickSubmit.bind(this);\n        this.onClickLoginGoogle = this.onClickLoginGoogle.bind(this);\n    }\n\n    componentWillMount() {\n        API.loginToken()\n            .then(this.loginSuccessHandle)\n            .catch(this.loginFailureHandle);\n    }\n\n    loginSuccessHandle(data: any) {\n        this.props.updateUserData(data);\n    }\n\n    loginFailureHandle() {\n        this.props.updateUserData({\n            id: '',\n            name: '',\n            email: '',\n        });\n    }\n\n    onChangeEmail(event: any) {\n        this.setState({ email: event.target.value });\n    }\n\n    onChangePassword(event: any) {\n        this.setState({ password: event.target.value });\n    }\n\n    onChangeConfirmPassword(event: any) {\n        this.setState({ passwordConfirm: event.target.value });\n    }\n\n    onClickTabSignIn() {\n        if (this.state.loginType !== LOGIN_TYPE.SIGNIN)\n            this.setState({ loginType: LOGIN_TYPE.SIGNIN });\n    }\n\n    onClickTabSignUp() {\n        if (this.state.loginType !== LOGIN_TYPE.SIGNUP)\n            this.setState({ loginType: LOGIN_TYPE.SIGNUP });\n    }\n\n    onClickSubmit() {\n        const { loginType, email, password, passwordConfirm } = this.state;\n        if (loginType === LOGIN_TYPE.SIGNIN && (!email || !password) ||\n            loginType === LOGIN_TYPE.SIGNUP && (!email || !password || !passwordConfirm)) return;\n\n        if (loginType === LOGIN_TYPE.SIGNIN) {\n            API.login(email, password)\n                .then(this.loginSuccessHandle)\n                .catch(this.loginFailureHandle)\n        } else if (loginType === LOGIN_TYPE.SIGNUP && password === passwordConfirm) {\n            API.register(email, password)\n                .then(data => {\n                    if (data.data.status === 'success') this.setState({ loginType: LOGIN_TYPE.SIGNIN })\n                })\n        }\n    }\n\n    onClickLoginGoogle() {\n        API.getAccount().then(data => console.log(data)) \n        // API.logout().then(data=>console.log(data))\n    }\n\n    render() {\n        const { loginType } = this.state;\n\n        return (\n            < div className=\"d-flex justify-content-center align-items-center vw-100 vh-100\" >\n                <form className=\"form-signin text-center\" onSubmit={(event) => { event.preventDefault() }}>\n                    <i className=\"fa fa-paper-plane logo\"></i>\n                    <h1 className=\"h3 mb-3 font-weight-normal\">Message</h1>\n                    <div className=\"btn-group btn-group-lg w-100\" role=\"group\" aria-label=\"Basic example\">\n                        <a onClick={this.onClickTabSignIn} className={`btn input-square-bottom font-weight-light ${loginType === LOGIN_TYPE.SIGNIN ? \"btn-primary text-white\" : \"btn-white text-secondary\"}`}>Sign in</a>\n                        <a onClick={this.onClickTabSignUp} className={`btn input-square-bottom font-weight-light ${loginType === LOGIN_TYPE.SIGNUP ? \"btn-primary text-white\" : \"btn-white text-secondary\"}`}>Sign up</a>\n                    </div>\n                    <label htmlFor=\"inputEmail\" className=\"sr-only\">Email address</label>\n                    <input type=\"email\" id=\"inputEmail\" className=\"form-control input-square-bottom input-square-top\" onChange={this.onChangeEmail} placeholder=\"Email adress\" required autoFocus />\n                    <label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\n                    <input type=\"password\" id=\"inputPassword\" className={`form-control input-square-top ${loginType === LOGIN_TYPE.SIGNUP ? \"input-square-bottom\" : \"\"}`} onChange={this.onChangePassword} placeholder=\"Password\" required />\n                    {loginType === LOGIN_TYPE.SIGNUP && <label htmlFor=\"inputComfirmPassword\" className=\"sr-only\">Confirm Password</label>}\n                    {loginType === LOGIN_TYPE.SIGNUP && <input type=\"password\" id=\"inputComfirmPassword\" className=\"form-control input-square-top\" onChange={this.onChangeConfirmPassword} placeholder=\"Confirm password\" required={loginType === LOGIN_TYPE.SIGNUP} />}\n                    <button type=\"submit\" className=\"btn btn-primary btn-block mt-3\" onClick={this.onClickSubmit}>{loginType === LOGIN_TYPE.SIGNIN ? \"Sign in\" : \"Sign up\"}</button>\n                    <button type=\"button\" className=\"btn btn-danger btn-block mt-1\" onClick={this.onClickLoginGoogle}><i className=\"fa fa-google-plus\" style={{ fontSize: '20px' }}></i>  Google</button>\n                </form>\n            </div >\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    app: state.app\n})\n\nconst mapDispatchToProps = {\n    showAlert, updateUserData\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAmBA;AACA;;;AACA;AACA;AAGA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAEA;;;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA3GA;AACA;AA6GA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AAAA;AADA;AAIA;;;;A","sourceRoot":""}